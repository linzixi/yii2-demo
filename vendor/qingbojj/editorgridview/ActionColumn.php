<?php
/**
 * Created by PhpStorm.
 * User: qingbo
 * Date: 2018/11/7
 * Time: 12:33
 */
namespace qingbojj\editorgridview;

use Yii;
use yii\helpers\Html;
use yii\helpers\Json;

class ActionColumn extends \yii\grid\ActionColumn
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->headerOptions = array_merge($this->headerOptions, [
            'lay-data' => Json::encode([
                'field' => 'action-field',
                'fixed' => 'right'
            ])
        ]);
    }

    /**
     * Initializes the default button rendering callbacks.
     */
    protected function initDefaultButtons()
    {
        $this->initDefaultButton('view', 'primary');
        $this->initDefaultButton('update', 'pencil');
        $this->initDefaultButton('delete', 'danger', [
            'data-confirm' => Yii::t('yii', 'Are you sure you want to delete this item?'),
            'data-method' => 'post',
        ]);
    }

    /**
     * Initializes the default button rendering callback for single button.
     * @param string $name Button name as it's written in template
     * @param string $iconName The part of Bootstrap glyphicon class that makes it unique
     * @param array $additionalOptions Array of additional options
     * @since 2.0.11
     */
    protected function initDefaultButton($name, $iconName, $additionalOptions = [])
    {
        if (!isset($this->buttons[$name]) && strpos($this->template, '{' . $name . '}') !== false) {
            $this->buttons[$name] = function ($url, $model, $key) use ($name, $iconName, $additionalOptions) {
                $aUrl = 'javascript:;';
                switch ($name) {
                    case 'view':
                        $title = Yii::t('yii', 'View');
                        break;
                    case 'update':
                        $title = Yii::t('yii', 'Update');
                        break;
                    case 'delete':
                        $title = Yii::t('yii', 'Delete');
                        $additionalOptions['data-action'] = 'delete';
                        $aUrl = $url;
                        break;
                    default:
                        $title = ucfirst($name);
                }
                $options = array_merge([
                    'title' => $title,
                    'aria-label' => $title,
                    'data-pjax' => '0',
                ], $additionalOptions, $this->buttonOptions);
                return Html::a($title, $aUrl, $options +
                    [
                        'class' => "admin-pop-btn layui-btn layui-btn-xs layui-btn-$iconName",
                        'data-url' => $url
                    ]
                );
            };
        }
    }
}