<?php

/**
 * Author: huanw2010@gmail.com
 * Date: 2019/8/28 12:53
 */
use terry\nlp\RpcLog;

class RpcLogTest extends \PHPUnit\Framework\TestCase
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testInfo()
    {
        RpcLog::config([
            'logSink' => 'terry\nlp\LogConsoleSink',
        ]);
        ob_start();
        RpcLog::info("This is a info message.");
        $res = ob_get_clean();
        echo "\n" . $res;
        $this->assertTrue(strpos($res, "[INFO]") === 0);
        $this->assertTrue(strpos($res, "info message") > 0);
        RpcLog::config([
            'logSink' => 'terry\nlp\LogFileSink',
        ]);
        $settings = RpcLog::getLogSink()->getSettings();
        $this->assertArrayHasKey('logFile', $settings);

        if (is_file($settings['logFile'])) {
            @unlink($settings['logFile']);
        }
        RpcLog::info("This is a info message which be appended to the log file");
        $this->assertTrue(is_file($settings['logFile']));
        $res = file_get_contents($settings['logFile']);
        echo $res;
        $this->assertTrue(strpos($res, "[INFO]") === 0);
    }

    public function testGetSettings()
    {
        $settings = RpcLog::getSettings();
        $this->assertArrayHasKey('logSink', $settings);
        RpcLog::config(['level' => 'WARN', 'logSink' => 'terry\nlp\LogConsoleSink']);
        $settings = RpcLog::getSettings();
        $this->assertArrayHasKey('level', $settings);
        print_r($settings);
        $this->assertEquals('WARN', $settings['level']);
    }

}